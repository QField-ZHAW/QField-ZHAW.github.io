# Projekt aufsetzen {#sec-projekt}

:::{.callout-note}

Die nachfolgenden Schritte m√ºssen *pro Projekt* gemacht werden. 

:::

Um die Anleitung etwas verst√§ndlicher zu machen, spielen wir ein Beispiel durch. In diesem Beispiel werden verschiedene Vegetationstrukturen erfasst: 

- Wiesen und Weiden (Fl√§chenhafte auspr√§gung)
- Einzelb√§ume und Str√§ucher (Punkte)

## Schritt 1: [qgis]{.q} Projekt erstellen {#sec-project-erstellen}

Als erster Schritt wird mit [qgis]{.q} Desktop ein Projekt erstellt ([Project ‚Üí New]{.menu}). Wir speichern das Projekt mit dem Namen *Vegetation-CH* an einem sinnvollen Ort auf unserem Computer ab ([Project ‚Üí Save As]{.menu}).

## Schritt 2: Geopackage erstellen

S√§mtliche Vektordaten werden in [qfield]{.q} in sogenannten _Geopackages_ erfasst. Geopackages sind alternativen zu _Shapefiles_ und _ESRI Geodatabases_. 

Um ein Geopackage zu erstellen, rechtsklick auf [Browser Panel ‚Üí Project Home]{.menu} und danach [New ‚Üí Geopackage]{.menu}. Beachtet, dass _Project Home_ ist nur sichtbar ist, wenn das [qgis]{.q} Projekt abgespeichert wurde. 

Das Geopackage erscheint mit dem Namen _New Geopackage.gpkg_ unter _Project Home_ (siehe @fig-new-geopackage). Wir benennen das File in *Felderhebung.gpkg* um ([Rechtsklick ‚Üí Manage ‚Üí Rename..]{.menu}). 

![Der Speicherort des neu erstellten Geopackages ist indentisch mit dem Projekt-Speicherort, welchen wir in @sec-project-erstellen definiert haben.](images/new-geopackage.png){#fig-new-geopackage}

## Schritt 2: Geopackage Tabelle erstellen

F√ºr jeden Datentyp (Punkte, Linien, Polygone), der Erfasst werden soll, wird eine "Tabelle" in der Geopackage erstellt. Daf√ºr klickt man mit Rechts auf das Geopackage [‚Üí New Table]{.menu}. F√ºr die Tabelle muss nun ein Name ([Name]{.menu}), ein Geometrietyp ([Geometry Type]{.menu}) sowie ein Koordinatenbezugssystem ([CRS]{.menu}) ausgew√§hlt werden (siehe @fig-new-layer). 

- F√ºr Erhebungen in der Schweiz empfehlen wir CRS `CH1903+ LV95` (EPSG Code `2056`). 
- F√ºr Erhebungen ausserhalb der Schweiz in einem kleinen Gebiet empfehlen wir die jeweilige UTM Zone ([hier ausw√§hlen](https://mangomap.com/robertyoung/maps/69585/what-utm-zone-am-i-in-#))
- F√ºr globale Erhebungen empfehlen wir WGS84 (EPSG Code `4326`)



![Minimal m√ºssen pro Tabelle der Name, der Geometrietyp sowie das CRS festgelegt werden. Optional k√∂nnen hier bereits Felder / Fields erfasst werden, dazu mehr in @sec-attribute](images/new-layer.png){#fig-new-layer}


F√ºr unsere Datentypen verwenden wir die Tabellen-Namen und Geometrietypen wie in @tbl-layers beschreiben. Beachtet, dass die Tabellen-Namen weder Umlaute, Sonderzeichen oder Leerzeichen enthalten sollen.



| Beschreibung            | Tabellen-Name     | Geometry Type |
|:------------------------|:------------------|:--------------|
| Wiesen & Weiden         | `wiesen_weiden`   | MultiPolygon  |
| Einzelb√§ume & Str√§ucher | `baume_straucher` | Point         |

: Tabellen-Namen und Geometrietypen f√ºr das fiktive Projekt *Vegetation-CH*. Wir empfehlen alles konsistent klein zu schreiben, Leerzeichen mit `_` zu ersetzen und Umlaute zu vermeiden (z.B. `a` statt `√§`) . {#tbl-layers}


Wir verwenden in unserem Beispiel (@tbl-layers) `Point` f√ºr die Einzelb√§ume und `MultiPolygon` f√ºr die Wiesen & Weiden. Der Grund ist der folgende: 

- Eine Wiese oder eine Weide kann aus verschiedenen, voneinander getrennten Teilst√ºcken bestehen. In diesem Fall wollen wir alle Teilst√ºcke "in einem Zug" erfassen k√∂nnen und dabei die Attribute (mehr zu Attributen in @sec-attribute) nur einmalig eingeben. Deshalb verwenden wir `MultiPolygon` statt `Polygon`.
- Bei B√§umen und Str√§ucher ist das anders: Hier verpflichten wir uns, jeden Baum und jeder Strauch einzeln zu erfassen, weil beispielsweise die Wuchsh√∂he f√ºr jedes Objekt einzeln angegeben werden muss. Deshalb verwenden wir `Point` statt `MultiPoint`.


## Schritt 3: Attribute definieren {#sec-attribute}

Damit wir die Beobachtungen, die wir im Feld machen auch festhalten k√∂nnen, brauchen wir Spalten (sog. Attribute). Diese Attribute (engl: _Fields_) werden pro Tabelle separat erstellt. F√ºr jede Spalte wird ein Datentyp ausgew√§hlt, wobei folgende Datentypen am h√§ufigsten sind:

- Nummerische Werte (mit / ohne Nachkommastellen)
- Text
- Datum (mit / ohne Uhrzeit)
- Bilder 


Spalten k√∂nnen entweder direkt w√§hrend der Erstellung der Tabelle (siehe @fig-new-layer) oder auch nachtr√§glich hinzugef√ºgt werden. F√ºr ein nachtr√§gliches erfassen muss man im [Browser Panel]{.menu} das Geopackage "ausklappen", so dass die [Fields]{.menu} sichtbar sind (siehe @fig-add-field-1). Mit Rechtsklick auf [Fields ‚Üí Add New Field]{.menu} k√∂nnen weitere Spalten hinzugef√ºgt werden, mit Rechtsklick auf eine bestehendes "Field" kann dieses editiert (z.B. umbenannt) werden.


:::{#fig-add-field layout-ncol=2}

![Im Browser Panel k√∂nnen Geopackages nachtr√§glich editiert werden.](images/add-field.png){#fig-add-field-1}

![F√ºr jedes Field muss ein Name und ein Datentyp definiert werden. Ein Alias sowie ein Kommentar helfen das Attribut besser zu beschreiben](images/add-field-2.png){#fig-add-field-2}


:::

Die Spalten f√ºr f√ºr die Tabelle `wiesen_weiden` sind in @tbl-spalten-wiesen beschreiben. Die Spalten f√ºr die Tabelle `baume_straucher` sind in @tbl-spalten-einzelbaeume dargestellt.

Die _Namen_ der Felder sollten keine Umlaute, Leerschl√§ge oder Sonderzeichen enthalten. Allerdings kann pro Feld ein _Alias_ definiert werden: Dabei handelt es sich um eine alternative Bezeichnung, bei dem diese Regeln nicht gelten.


| Bezeichnung / Alias | Datentyp                         | Spaltenname     |
|:--------------------|:---------------------------------|:----------------|
| Erfassungsdatum     | `Date`                           | erfassungsdatum |
| Typ                 | `Text (String)` [^text]          | typ             |
| Anzahl Arten        | `Integer (32 Bit)` [^int32]      | anzahl_arten    |

: Spalten f√ºr _wiesen_weiden_ {#tbl-spalten-wiesen}

| Bezeichnung / Alias | Datentyp                         | Spaltenname     |
|:--------------------|:---------------------------------|:----------------|
| Erfassungsdatum     | `Date`                           | erfassungsdatum |
| Art                 | `Text (String)`                  | art             |
| Wuchsh√∂he           | `Decimal Number (real)` [^real]  | wuchshohe       |
| Bemerkung           | `Text (String)`                  | bemerkung       |

: Spalten f√ºr _baume_straucher_ {#tbl-spalten-einzelbaeume}


  
Detailliertere Informationen zu den Datentypen in Geopackages findet ihr in @tbl-geopackage-datatypes


[^text]: Bei Text kann _optional_ die maximale Textl√§nge angegeben werden. Der Defaultwert 0 bedeutet "unbeschr√§nkt"

[^int32]: Zahlen ohne Nachkommastellen im Wertebereich ca. -2.1 bis +2.1 Mio. F√ºr gr√∂ssere Zahlen `64 Bit` verwenden

[^real]: eine Fliesskommazahl


## Schritt 4: Attributeingabe festlegen


### Warum?

Um den Input von Attribute zu vereinfachen, k√∂nnen Eingabefelder festgelegt werden. Beispielsweise f√ºr solche Vereinfachungen:

- Eingabe von numerischen Werten via einem Slider (zum Beispiel wenn sich der Wert nur in einem bestimmten Bereich bewegen kann)
- Eingabe von Ja/Nein mittels Checkbox
- Eingabe von Text √ºber ein Dropdown Men√º (wenn es eine festgelegte beschr√§nkte Liste von Optionen gibt)
- Eingabe von Datum via einem Kalender


Zudem k√∂nnen Datenqualit√§tsaspekte festgelegt werden. Beispielsweise:

- Ein Feld darf *nicht* leer sein (zwingende Eingabe)
- Jeder Wert darf nur 1x vorkommen (Eindeutige Werte)
- Ein Feld wird automatisch ausgef√ºllt und darf *nicht* editiert werden (zum Beispiel `fid`)


Weiter k√∂nnen auch kleinere Erleichterungen eingebaut werden. Beispielsweise, dass der Defaultwert eines Feldes der letzten Eingabe entspricht. Dies kann sinnvoll sein, wenn absehbar ist, dass oft die gleichen Attribute nacheinander eingetragen werden m√ºssen (z.B. *Erfassungsdatum*.)


### Wie?

Um die Attributeingabe festzulegen, m√ºssen die Tabellen erstmal dem QGIS Projekt hinzugef√ºgt werden. Dazu im [Browser Panel]{.menu} den jeweiligen doppelklicken oder Rechtsklick [Add Layer to Project]{.menu}. Danach im [Layers Panel]{.menu} rechtsklick auf den Layer [Properties ‚Üí Attribute Form]{.menu} (siehe @fig-attribute-form).


:::{.callout-note}

Alle Einstellungen an den Attributeingaben sind teil des [qgis]{.q} *Projektes*. Die Einstellungen aus @sec-attribute hingegen waren Teil des *Geopackage*. 

:::


![In den Layer Properties k√∂nnen die Eingaben definiert werden](images/attribute-form.png){#fig-attribute-form} 





### Beispiel *Vegetation-CH*

In unserem Fiktiven Beispiel k√∂nnen wir folgende Formulareingaben festhalten:

_Wiesen_Weiden_

- **Datum**:
  - QGIS verwendet f√ºr Datumsfelder per Default den [Widget Type: Date/Time]{.menu} sowie, [üóπ Calender Popup]{.menu}. Dies ist auch f√ºr unsere Anwendung sinnvoll
  - Es ist absehbar, dass wir am gleichen Tag mehrere Objekte erfassen, deshalb setzen wir noch [üóπ Reuse last entered value]{.menu}
- **Typ**: Hier h√§tten wir gerne eine Dropdownliste mit zwei Eintr√§gen: Wiese sowie Weide. Zu diesem Zweck verwenden wir das [Widget Type: Value Map]{.menu} und erfassen unsere Liste m√∂glicher Werte in der dazu verf√ºgung stehender Tabelle (siehe @fig-value-map)
- **Anzahl Arten**: Hier setzen wir den minimum Wert auf 0 und den maximalwert auf 100 und nutzen die Eingabe [Slider]{.menu}
- **Bemerkung**: Hier belassen wir die Default Einstellungen


::::{.column-page}

:::{#fig-attribute-form layout-ncol=2}

![Value map](images/value-map.png){#fig-value-map}

![Slider](images/slider.png){#fig-slider}

Verschiedene Attribut-Formular Optionen

:::

::::





