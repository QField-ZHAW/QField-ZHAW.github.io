# Projekt aufsetzen {#sec-projekt}

:::{.callout-note}

Die nachfolgenden Schritte m√ºssen *pro Projekt* gemacht werden. 

:::

Um die Anleitung etwas verst√§ndlicher zu machen, spielen wir ein Beispiel durch. In diesem Beispiel werden verschiedene Vegetationstrukturen erfasst: 

- Wiesen und Weiden (Fl√§chenhafte auspr√§gung)
- Hecken (Linienstrukturen)
- Einzelb√§ume und Str√§ucher (Punkte)

## Schritt 1: [qgis]{.q} Projekt erstellen {#sec-project-erstellen}

Als erster Schritt wird mit [qgis]{.q} Desktop ein Projekt erstellt ([Project ‚Üí New]{.menu}). Wir speichern das Projekt mit dem Namen *Vegetation-CH* an einem sinnvollen Ort auf unserem Computer ab ([Project ‚Üí Save As]{.menu}).

## Schritt 2: Geopackage erstellen

S√§mtliche Vektordaten werden in [qfield]{.q} in sogenannten _Geopackages_ erfasst. Geopackages sind alternativen zu _Shapefiles_ und _ESRI Geodatabases_. 

Um ein Geopackage zu erstellen, rechtsklick auf [Browser Panel ‚Üí Project Home]{.menu} und danach [New ‚Üí Geopackage]{.menu}. Beachtet, dass _Project Home_ ist nur sichtbar ist, wenn das [qgis]{.q} Projekt abgespeichert wurde. 

Das Geopackage erscheint mit dem Namen _New Geopackage.gpkg_ unter _Project Home_ (siehe @fig-new-geopackage). Wir benennen das File in *Felderhebung.gpkg* um ([Rechtsklick ‚Üí Manage ‚Üí Rename..]{.menu}). 

![Der Speicherort des neu erstellten Geopackages ist indentisch mit dem Projektspeicherort (@sec-project-erstellen)](images/new-geopackage.png){#fig-new-geopackage}

## Schritt 2: Geopackage layer erstellen

F√ºr jeden Datentyp (Punkte, Linien, Polygone), der Erfasst werden soll, wird ein Geopackage Layer erstellt. Daf√ºr klickt man mit Rechts auf das [Geopackage ‚Üí New Table]{.menu}. Nun muss ein Layer Name (_Name_), ein Geometrietyp (_Geometry Type_) sowie ein Koordinatenbezugssystem (_CRS_) ausgew√§hlt werden (siehe @fig-new-layer). F√ºr die Schweiz wird das CRS `CH1903+ LV95` mit dem EPSG Code *2056* empfohlen. 



![Minimal m√ºssen pro Tabelle der Name, der Geometrietyp sowie das CRS festgelegt werden. Optional k√∂nnen hier bereits Felder / Fields erfasst werden, dazu mehr in @sec-attribute](images/new-layer.png){#fig-new-layer}


F√ºr unsere Datentypen verwenden wir die Layer Namen und Geometrietypen wie in @tbl-layers beschreiben. Beachtet, dass die Layernamen weder Umlaute, Sonderzeichen oder Leerzeichen enthalten sollen.



| Beschreibung            | Layer Name        | Geometry Type |
|:------------------------|:------------------|:--------------|
| Wiesen & Weiden         | `Wiesen_Weiden`   | Polygon       |
| Hecken                  | `Hecken`          | LineString    |
| Einzelb√§ume & Str√§ucher | `Baume_Straucher` | Point         |

: Layernamen und Geometrietypen f√ºr das fiktive Projekt *Vegetation-CH*. {#tbl-layers}


Wir verwenden in unserem Beispiel (@tbl-layers) *einfache* Point / LineString / Polygon. Zu diesen Geometrietypen stehen noch *MultiPoint*, *MultiLineString* und *MultiPolygon* zur Verf√ºgung. Diese werden dann verwendet, wenn **sich mehrere Objekte alle Attribute teilen**. Mehr zu Attributen im n√§chsten Unterkapitel.

## Schritt 3: Attribute definieren {#sec-attribute}

Damit wir die Beobachtungen, die wir im Feld machen auch festhalten k√∂nnen, brauchen wir Spalten (sog. Attribute). Diese Attribute (engl: _Fields_) werden pro Layer separat erstellt. F√ºr jede Spalte wird ein Datentyp ausgew√§hlt, wobei folgende Datentypen am h√§ufigsten sind:

- Nummerische Werte (mit / ohne Nachkommastellen)
- Text
- Datum (mit / ohne Uhrzeit)
- Bilder 


Spalten k√∂nnen entweder direkt w√§hrend der Erstellung des Layers (siehe @fig-new-layer) oder auch nachtr√§glich hinzugef√ºgt werden. F√ºr ein nachtr√§gliches Hinzuf√ºgen von Spalten muss der Layer dem Projekt hinzugef√ºgt werden ([Rechtscklick ‚Üí Add Layer to Project]{.menu}). 


Danach im _Layers_ Panel mit Rechtsklick auf den [Layer ‚Üí Properties ‚Üí Fields]{.menu}. Nach Klick auf [üñâ Toggle Editing Mode]{.menu} k√∂nnen witere Spalten hinzugef√ºgt werden.

Wir erstellen pro Layer die nachstehenden Spalten. Die _Namen_ der Felder sollten keine Umlaute, Leerschl√§ge oder Sonderzeichen enthalten. Allerdings kann pro Feld ein _Alias_ definiert werden: Dabei handelt es sich um eine alternative Bezeichnung, bei dem diese Regeln nicht gelten.


| Bezeichnung / Alias | Datentyp                    | Spaltenname     |
|---------------------|-----------------------------|-----------------|
| Erfassungsdatum     | `Date`                      | erfassungsdatum |
| Typ                 | `Text (String)` [^text]     | typ             |
| Anzahl Arten        | `Integer (32 Bit)` [^int32] | anzahl_arten    |

: Spalten f√ºr _Wiesen_Weiden_ sowie _Hecken_ {#tbl-spalten-wiesen-hecken}

| Bezeichnung / Alias | Datentyp                         | Spaltenname     |
|---------------------|----------------------------------|-----------------|
| Erfassungsdatum     | `Date`                           | erfassungsdatum |
| Art                 | `Text (String)`                  | art             |
| Wuchsh√∂he           | `Decimal Number (real)` [^real]  | wuchshohe       |
| Bemerkung           | `Text (String)`                  | bemerkung       |

: Spalten f√ºr _Wiesen_Weiden_ sowie _Hecken_ {#tbl-spalten-einzelbaeume}


  
Detailliertere Informationen zu den Datentypen in Geopackages findet ihr in @tbl-geopackage-datatypes


[^text]: Bei Text kann _optional_ die maximale Textl√§nge angegeben werden. Der Defaultwert 0 bedeutet "unbeschr√§nkt"

[^int32]: Zahlen ohne Nachkommastellen im Wertebereich ca. -2.1 bis +2.1 Mio. F√ºr gr√∂ssere Zahlen `64 Bit` verwenden

[^real]: eine Fliesskommazahl


## Schritt 4: Attributeingabe festlegen

Um den Input von Attribute zu vereinfachen, k√∂nnen Eingabefelder festgelegt werden. Beispielsweise f√ºr solche Vereinfachungen:

- Eingabe von numerischen Werten via einem Slider (zum Beispiel wenn sich der Wert nur in einem bestimmten Bereich bewegen kann)
- Eingabe von Ja/Nein mittels Checkbox
- Eingabe von Text √ºber ein Dropdown Men√º (wenn es eine festgelegte beschr√§nkte Liste von Optionen gibt)
- Eingabe von Datum via einem Kalender


Zudem k√∂nnen Datenqualit√§tsaspekte festgelegt werden. Beispielsweise:

- Ein Feld darf *nicht* leer sein (zwingende Eingabe)
- Jeder Wert darf nur 1x vorkommen (Eindeutige Werte)
- Ein Feld wird automatisch ausgef√ºllt und darf *nicht* editiert werden (zum Beispiel `fid`)


Weiter k√∂nnen auch kleinere Erleichterungen eingebaut werden. Beispielsweise, dass der Defaultwert eines Feldes der letzten Eingabe entspricht. Dies kann sinnvoll sein, wenn absehbar ist, dass oft die gleichen Attribute nacheinander eingetragen werden m√ºssen (z.B. *Erfassungsdatum*.)

Diese Aspekte werden im [qgis]{.q} Projekt festgehalten. Rechtsklick auf den Layer [Properties ‚Üí Attribute Form]{.menu}

In unserem Fiktiven Beispiel k√∂nnen wir folgende Formulareingaben festhalten:

- _Wiesen_Weiden_ sowie _Hecken_
  - Datum:
    - Folgende Standarteinstellungen f√ºr Datumsfelder sind bereits ausreichend ([Widget Type: Date/Time]{.menu}, [üóπ Calender Popup]{.menu})
    - Um die letzte Eingabe als Defaultwert f√ºr neue Objekte zu machen, setzen wir noch [üóπ Reuse last entered value]{.menu}
  - Typ:
    - Hier h√§tten wir gerne eine Dropdownliste verschiedener Wiesen/Weiden bzw. Heckentypen. F√ºr Wiesen/Weiden: soll es nur zwei m√∂gliche Eintr√§ge geben: *Wiese* sowie *Weide*
  - Anzahl Arten
  - Bemerkung
