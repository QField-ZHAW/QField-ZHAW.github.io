[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Erfassen von Geodaten im Feld mit qfield und qfield Cloud",
    "section": "",
    "text": "Einleitung\nDie nachstehende Anleitung dient dazu, Geodaten im Feld mittels qfield und qfield cloud durchzuführen.\n\nIn 1  System aufsetzen beschreiben wir die installation der notwenigen Software und Plugins. Das ist einmalig nötig und kann übersprungen werden, wenn die notwendige Software bereits installiert ist\nIn 2  Projekt aufsetzen geht es darum, ein qfield Projekt mittels qgis aufzusetzen. Um die Schritte zu veranschaulichen, spielen wir ein fikitves Projekt mit dem Namen Vegetation-CH durch",
    "crumbs": [
      "Einleitung"
    ]
  },
  {
    "objectID": "installation.html",
    "href": "installation.html",
    "title": "1  System aufsetzen",
    "section": "",
    "text": "1.1 Schritt 1: qgis (Desktop) installieren\nUm Daten in qfield erfassen zu können, braucht es ein “Projekt”. Dieses Projekt wird mit qgis auf dem Desktop erstellt. qgis kann von der qgis Website heruntergelanden werden: https://qgis.org/download/.\nWir empfehlen, die Menüsprache auf Englisch umzustellen (siehe Abbildung 1.1). So ist es viel einfacher, im Internet nach Hilfestellungen und Anleitungen zu suchen. Die Bezeichnungen in dieser Anleitungen sind jeweils auf Englisch.\nUm die Menüsprache auf Englisch umzustellen klickt man auf Einstellungen → Options:\nDanach muss qgis neu gestartet werden.",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>System aufsetzen</span>"
    ]
  },
  {
    "objectID": "installation.html#schritt-1-qgis-desktop-installieren",
    "href": "installation.html#schritt-1-qgis-desktop-installieren",
    "title": "1  System aufsetzen",
    "section": "",
    "text": "☑ System-Locale Übersteuern\nBenutzeroberflächenübersetzung: American English\n\n\n\n\n\n\n\n\nAbbildung 1.1: “Locale” bezieht sich lediglich auf die Darstellung von Zahlen, Datumsangaben und Währungen",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>System aufsetzen</span>"
    ]
  },
  {
    "objectID": "installation.html#schritt-2-qgis-plugin-installieren",
    "href": "installation.html#schritt-2-qgis-plugin-installieren",
    "title": "1  System aufsetzen",
    "section": "1.2 Schritt 2: qgis Plugin installieren",
    "text": "1.2 Schritt 2: qgis Plugin installieren\nDamit ein qgis Projekt in qfield verwendet werden kann, braucht es das qgis Plugin qfield Sync. Das Plugin kann via dem Plugin Manager Plugins → Manage and install plugins installiert werden.\n\n\n\n\n\n\nAbbildung 1.2: qfield Sync Plugin im Plugin Manager",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>System aufsetzen</span>"
    ]
  },
  {
    "objectID": "installation.html#schritt-3-qfield-installieren",
    "href": "installation.html#schritt-3-qfield-installieren",
    "title": "1  System aufsetzen",
    "section": "1.3 Schritt 3: qfield installieren",
    "text": "1.3 Schritt 3: qfield installieren\nqfield muss auf dem mobilen Gerät (mit dem man die Daten erfassen möchte) installiert werden. qfield gibt es für Andoid, iOS und Windows und kann im jeweiligen Store bezogen werden.\n\nAndroid Google Play\niOS Apple Store\nWindows Microsoft Store\nLinux\nMacOS",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>System aufsetzen</span>"
    ]
  },
  {
    "objectID": "installation.html#schritt-3-qfield-cloud-account-erstellen",
    "href": "installation.html#schritt-3-qfield-cloud-account-erstellen",
    "title": "1  System aufsetzen",
    "section": "1.4 Schritt 3: qfield Cloud Account erstellen",
    "text": "1.4 Schritt 3: qfield Cloud Account erstellen\n\n\n\n\n\n\nTodo Terz\n\n\n\n\nKurzer Anleitung für das Erstellen eines Cloud Accountes via https://app.qfield.cloud/accounts/signup/ erstellen\nKurzer Hinweis, dass der Account von der FG GeoI der Organisation ZHAW hinzugefügt werden muss (damit mit anderen Kollaboriert werden kann), also Mail an info.geoinformatik@zhaw.ch schicken\nKurzer Hinweis, wie man sich mit dem Plugin Einlogged",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>System aufsetzen</span>"
    ]
  },
  {
    "objectID": "projekt.html",
    "href": "projekt.html",
    "title": "2  Projekt aufsetzen",
    "section": "",
    "text": "2.1 Schritt 1: qgis Projekt erstellen\nUm die Anleitung etwas verständlicher zu machen, spielen wir ein Beispiel durch. In diesem Beispiel werden verschiedene Vegetationstrukturen erfasst:\nAls erster Schritt wird mit qgis Desktop ein Projekt erstellt (Project → New). Wir speichern das Projekt mit dem Namen Vegetation-CH an einem sinnvollen Ort auf unserem Computer ab (Project → Save As).",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Projekt aufsetzen</span>"
    ]
  },
  {
    "objectID": "projekt.html#schritt-2-geopackage-erstellen",
    "href": "projekt.html#schritt-2-geopackage-erstellen",
    "title": "2  Projekt aufsetzen",
    "section": "2.2 Schritt 2: Geopackage erstellen",
    "text": "2.2 Schritt 2: Geopackage erstellen\nSämtliche Vektordaten werden in qfield in sogenannten Geopackages erfasst. Geopackages sind alternativen zu Shapefiles und ESRI Geodatabases.\nUm ein Geopackage zu erstellen, rechtsklick auf Browser Panel → Project Home und danach New → Geopackage. Beachtet, dass Project Home ist nur sichtbar ist, wenn das qgis Projekt abgespeichert wurde.\nDas Geopackage erscheint mit dem Namen New Geopackage.gpkg unter Project Home (siehe Abbildung 2.1). Wir benennen das File in Felderhebung.gpkg um (Rechtsklick → Manage → Rename..).\n\n\n\n\n\n\nAbbildung 2.1: Der Speicherort des neu erstellten Geopackages ist indentisch mit dem Projekt-Speicherort, welchen wir in Kapitel 2.1 definiert haben.",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Projekt aufsetzen</span>"
    ]
  },
  {
    "objectID": "projekt.html#schritt-2-geopackage-tabelle-erstellen",
    "href": "projekt.html#schritt-2-geopackage-tabelle-erstellen",
    "title": "2  Projekt aufsetzen",
    "section": "2.3 Schritt 2: Geopackage Tabelle erstellen",
    "text": "2.3 Schritt 2: Geopackage Tabelle erstellen\nFür jeden Datentyp (Punkte, Linien, Polygone), der Erfasst werden soll, wird eine “Tabelle” in der Geopackage erstellt. Dafür klickt man mit Rechts auf das Geopackage → New Table. Für die Tabelle muss nun ein Name (Name), ein Geometrietyp (Geometry Type) sowie ein Koordinatenbezugssystem (CRS) ausgewählt werden (siehe Abbildung 2.2).\n\nFür Erhebungen in der Schweiz empfehlen wir CRS CH1903+ LV95 (EPSG Code 2056).\nFür Erhebungen ausserhalb der Schweiz in einem kleinen Gebiet empfehlen wir die jeweilige UTM Zone (hier auswählen)\nFür globale Erhebungen empfehlen wir WGS84 (EPSG Code 4326)\n\n\n\n\n\n\n\nAbbildung 2.2: Minimal müssen pro Tabelle der Name, der Geometrietyp sowie das CRS festgelegt werden. Optional können hier bereits Felder / Fields erfasst werden, dazu mehr in Kapitel 2.4\n\n\n\nFür unsere Datentypen verwenden wir die Tabellen-Namen und Geometrietypen wie in Tabelle 2.1 beschreiben. Beachtet, dass die Tabellen-Namen weder Umlaute, Sonderzeichen oder Leerzeichen enthalten sollen.\n\n\n\nTabelle 2.1: Tabellen-Namen und Geometrietypen für das fiktive Projekt Vegetation-CH. Wir empfehlen alles konsistent klein zu schreiben, Leerzeichen mit _ zu ersetzen und Umlaute zu vermeiden (z.B. a statt ä) .\n\n\n\n\n\nBeschreibung\nTabellen-Name\nGeometry Type\n\n\n\n\nWiesen & Weiden\nwiesen_weiden\nMultiPolygon\n\n\nEinzelbäume & Sträucher\nbaume_straucher\nPoint\n\n\n\n\n\n\nWir verwenden in unserem Beispiel (Tabelle 2.1) Point für die Einzelbäume und MultiPolygon für die Wiesen & Weiden. Der Grund ist der folgende:\n\nEine Wiese oder eine Weide kann aus verschiedenen, voneinander getrennten Teilstücken bestehen. In diesem Fall wollen wir alle Teilstücke “in einem Zug” erfassen können und dabei die Attribute (mehr zu Attributen in Kapitel 2.4) nur einmalig eingeben. Deshalb verwenden wir MultiPolygon statt Polygon.\nBei Bäumen und Sträucher ist das anders: Hier verpflichten wir uns, jeden Baum und jeder Strauch einzeln zu erfassen, weil beispielsweise die Wuchshöhe für jedes Objekt einzeln angegeben werden muss. Deshalb verwenden wir Point statt MultiPoint.",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Projekt aufsetzen</span>"
    ]
  },
  {
    "objectID": "projekt.html#sec-attribute",
    "href": "projekt.html#sec-attribute",
    "title": "2  Projekt aufsetzen",
    "section": "2.4 Schritt 3: Attribute definieren",
    "text": "2.4 Schritt 3: Attribute definieren\nDamit wir die Beobachtungen, die wir im Feld machen auch festhalten können, brauchen wir Spalten (sog. Attribute). Diese Attribute (engl: Fields) werden pro Tabelle separat erstellt. Für jede Spalte wird ein Datentyp ausgewählt, wobei folgende Datentypen am häufigsten sind:\n\nNummerische Werte (mit / ohne Nachkommastellen)\nText\nDatum (mit / ohne Uhrzeit)\nBilder\n\nSpalten können entweder direkt während der Erstellung der Tabelle (siehe Abbildung 2.2) oder auch nachträglich hinzugefügt werden. Für ein nachträgliches erfassen muss man im Browser Panel das Geopackage “ausklappen”, so dass die Fields sichtbar sind (siehe Abbildung 2.3 (a)). Mit Rechtsklick auf Fields → Add New Field können weitere Spalten hinzugefügt werden, mit Rechtsklick auf eine bestehendes “Field” kann dieses editiert (z.B. umbenannt) werden.\n\n\n\n\n\n\n\n\n\n\n\n(a) Im Browser Panel können Geopackages nachträglich editiert werden.\n\n\n\n\n\n\n\n\n\n\n\n(b) Für jedes Field muss ein Name und ein Datentyp definiert werden. Ein Alias sowie ein Kommentar helfen das Attribut besser zu beschreiben\n\n\n\n\n\n\n\nAbbildung 2.3\n\n\n\nDie Spalten für für die Tabelle wiesen_weiden sind in Tabelle 2.2 beschreiben. Die Spalten für die Tabelle baume_straucher sind in Tabelle 2.3 dargestellt.\nDie Namen der Felder sollten keine Umlaute, Leerschläge oder Sonderzeichen enthalten. Allerdings kann pro Feld ein Alias definiert werden: Dabei handelt es sich um eine alternative Bezeichnung, bei dem diese Regeln nicht gelten.\n\n\n\nTabelle 2.2: Spalten für wiesen_weiden\n\n\n\n\n\n\n\n\n\n\nBezeichnung / Alias\nDatentyp\nSpaltenname\n\n\n\n\nErfassungsdatum\nDate\nerfassungsdatum\n\n\nTyp\nText (String) 1\ntyp\n\n\nAnzahl Arten\nInteger (32 Bit) 2\nanzahl_arten\n\n\n\n\n\n\n\n\n\nTabelle 2.3: Spalten für baume_straucher\n\n\n\n\n\n\n\n\n\n\nBezeichnung / Alias\nDatentyp\nSpaltenname\n\n\n\n\nErfassungsdatum\nDate\nerfassungsdatum\n\n\nArt\nText (String)\nart\n\n\nWuchshöhe\nDecimal Number (real) 3\nwuchshohe\n\n\nBemerkung\nText (String)\nbemerkung\n\n\n\n\n\n\nDetailliertere Informationen zu den Datentypen in Geopackages findet ihr in Tabelle 5.1",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Projekt aufsetzen</span>"
    ]
  },
  {
    "objectID": "projekt.html#schritt-4-attributeingabe-festlegen",
    "href": "projekt.html#schritt-4-attributeingabe-festlegen",
    "title": "2  Projekt aufsetzen",
    "section": "2.5 Schritt 4: Attributeingabe festlegen",
    "text": "2.5 Schritt 4: Attributeingabe festlegen\n\nWarum?\nUm den Input von Attribute zu vereinfachen, können Eingabefelder festgelegt werden. Beispielsweise für solche Vereinfachungen:\n\nEingabe von numerischen Werten via einem Slider (zum Beispiel wenn sich der Wert nur in einem bestimmten Bereich bewegen kann)\nEingabe von Ja/Nein mittels Checkbox\nEingabe von Text über ein Dropdown Menü (wenn es eine festgelegte beschränkte Liste von Optionen gibt)\nEingabe von Datum via einem Kalender\n\nZudem können Datenqualitätsaspekte festgelegt werden. Beispielsweise:\n\nEin Feld darf nicht leer sein (zwingende Eingabe)\nJeder Wert darf nur 1x vorkommen (Eindeutige Werte)\nEin Feld wird automatisch ausgefüllt und darf nicht editiert werden (zum Beispiel fid)\n\nWeiter können auch kleinere Erleichterungen eingebaut werden. Beispielsweise, dass der Defaultwert eines Feldes der letzten Eingabe entspricht. Dies kann sinnvoll sein, wenn absehbar ist, dass oft die gleichen Attribute nacheinander eingetragen werden müssen (z.B. Erfassungsdatum.)\n\n\nWie?\nUm die Attributeingabe festzulegen, müssen die Tabellen erstmal dem QGIS Projekt hinzugefügt werden. Dazu im Browser Panel den jeweiligen doppelklicken oder Rechtsklick Add Layer to Project. Danach im Layers Panel rechtsklick auf den Layer Properties → Attribute Form (siehe Abbildung 2.5).\n\n\n\n\n\n\nHinweis\n\n\n\nAlle Einstellungen an den Attributeingaben sind teil des qgis Projektes. Die Einstellungen aus Kapitel 2.4 hingegen waren Teil des Geopackage.\n\n\n\n\n\n\n\n\nAbbildung 2.4: In den Layer Properties können die Eingaben definiert werden\n\n\n\n\n\nBeispiel Vegetation-CH\nIn unserem Fiktiven Beispiel können wir folgende Formulareingaben festhalten:\nWiesen_Weiden\n\nDatum:\n\nQGIS verwendet für Datumsfelder per Default den Widget Type: Date/Time sowie, 🗹 Calender Popup. Dies ist auch für unsere Anwendung sinnvoll\nEs ist absehbar, dass wir am gleichen Tag mehrere Objekte erfassen, deshalb setzen wir noch 🗹 Reuse last entered value\n\nTyp: Hier hätten wir gerne eine Dropdownliste mit zwei Einträgen: Wiese sowie Weide. Zu diesem Zweck verwenden wir das Widget Type: Value Map und erfassen unsere Liste möglicher Werte in der dazu verfügung stehender Tabelle (siehe Abbildung 2.5 (a))\nAnzahl Arten: Hier setzen wir den minimum Wert auf 0 und den maximalwert auf 100 und nutzen die Eingabe Slider\nBemerkung: Hier belassen wir die Default Einstellungen\n\n\n\n\n\n\n\n\n\n\n\n\n\n(a) Value map\n\n\n\n\n\n\n\n\n\n\n\n(b) Slider\n\n\n\n\n\n\n\nAbbildung 2.5: Verschiedene Attribut-Formular Optionen",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Projekt aufsetzen</span>"
    ]
  },
  {
    "objectID": "projekt.html#footnotes",
    "href": "projekt.html#footnotes",
    "title": "2  Projekt aufsetzen",
    "section": "",
    "text": "Bei Text kann optional die maximale Textlänge angegeben werden. Der Defaultwert 0 bedeutet “unbeschränkt”↩︎\nZahlen ohne Nachkommastellen im Wertebereich ca. -2.1 bis +2.1 Mio. Für grössere Zahlen 64 Bit verwenden↩︎\neine Fliesskommazahl↩︎",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Projekt aufsetzen</span>"
    ]
  },
  {
    "objectID": "synchronisierung.html",
    "href": "synchronisierung.html",
    "title": "3  Projekt Synchronisieren",
    "section": "",
    "text": "3.1 Konvertierung QGIS → QField Project\nWenn das System aufgesetzt ist (siehe Kapitel 1) und das QGIS Projekt vorbereitet (siehe Kapitel 2) sind die Voraussetzungen gegeben mit QField Mobile zu Synchronisieren. Um ein Lokales QGIS Projekt mit QField Mobile zu Synchronisieren braucht es zwei Zwischentschritte:\nDie Schritte “Konvertierung” und “Sync” werden im nachfolgenden Unterkapiteln beschrieben.\nDanach wird das Projekt automatisch in/mit der Cloud synchronisiert",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Projekt Synchronisieren</span>"
    ]
  },
  {
    "objectID": "synchronisierung.html#konvertierung-qgis-qfield-project",
    "href": "synchronisierung.html#konvertierung-qgis-qfield-project",
    "title": "3  Projekt Synchronisieren",
    "section": "",
    "text": "Schritt 1: Klick auf QField Cloud Projects Overview im QField Plugin Panel\n\n\n\n\n\n\n\nSchritt 2: Klick auf “Create New Project” um ein neues QField Projekt zu erstellen\n\n\n\n\n\n\n\nSchritt 3: “Convert currently open project…” auswählen und mit “Next” bestätigen\n\n\n\n\n\n\n\n\n\n\n\nTodo terz\n\n\n\n\nWie integriere ich (offline) basemaps?\nLayerspezifische Einstellungen ← hier weiss ich nicht mehr, was ich gemeint habe",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Projekt Synchronisieren</span>"
    ]
  },
  {
    "objectID": "synchronisierung.html#qfield-mobile-qfield-cloud",
    "href": "synchronisierung.html#qfield-mobile-qfield-cloud",
    "title": "3  Projekt Synchronisieren",
    "section": "3.2 QField mobile ↔︎ QField Cloud",
    "text": "3.2 QField mobile ↔︎ QField Cloud\n\nÖffnen des Projektes\n\n\n\n\n\n\nTodo terz\n\n\n\n\nKannst du das noch mehr in Worte fassen / beschreiben?\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nSynchronisierung mit Cloud\n\n\n\n\n\n\nTodo terz\n\n\n\n\nKannst du das noch mehr in Worte fassen / beschreiben?\n\n\n\n\n\n\n\n\n\n\n\n\n\nEntweder nur die gemachten Features mit Cloud updaten (push changes) oder ganzes Projekt synchronisieren",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Projekt Synchronisieren</span>"
    ]
  },
  {
    "objectID": "synchronisierung.html#qfield-projekt-qfield-cloud",
    "href": "synchronisierung.html#qfield-projekt-qfield-cloud",
    "title": "3  Projekt Synchronisieren",
    "section": "3.3 QField Projekt ↔︎ QField Cloud",
    "text": "3.3 QField Projekt ↔︎ QField Cloud\n\n\n\n\n\n\nTodo terz\n\n\n\n\nKannst du das noch mehr in Worte fassen / beschreiben?\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nActions werden meist richtig erkannt Aber hier ist vorsicht geboten, was aktualisiert werden muss",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Projekt Synchronisieren</span>"
    ]
  },
  {
    "objectID": "qfield-cloud-management.html",
    "href": "qfield-cloud-management.html",
    "title": "4  QField Cloud Management",
    "section": "",
    "text": "4.1 Organisationsmitglieder hinzufügen\nWir haben an der ZHAW eine QField Cloud Organization mit Acacemic pricing. Dies beinhaltet unter anderem folgendes (siehe auch hier bzw. hier):\nUnsere Organisation heisst ZHAW, die URL für unsere Organisation lautet:\nhttps://app.qfield.cloud/a/ZHAW/\nWir können Mitglieder zu Organisation via Emailadresse oder Benutzernamen hinzufügen.\nBei Hinzufügen via Email: Falls kein QField-Cloud Account unter der angegebenen Emailadresse registriert ist, wird eine Einladung zur Registrierung an die angegebene Mailadresse verschickt.",
    "crumbs": [
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>QField Cloud Management</span>"
    ]
  },
  {
    "objectID": "qfield-cloud-management.html#organisationsmitglieder-hinzufügen",
    "href": "qfield-cloud-management.html#organisationsmitglieder-hinzufügen",
    "title": "4  QField Cloud Management",
    "section": "",
    "text": "Einzelne Nutzer können via dem Browserinterface hinzugefügt werden, siehe https://app.qfield.cloud/settings/ZHAW/members.\nMehrere Nutzer (z.B. eine ganze Schulklasse oder alle IUNR Mitarbeiter) können via der QField Cloud API hinzugefügt werden, siehe dazu Kapitel 5.2",
    "crumbs": [
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>QField Cloud Management</span>"
    ]
  },
  {
    "objectID": "qfield-cloud-management.html#sec-project-collaborators",
    "href": "qfield-cloud-management.html#sec-project-collaborators",
    "title": "4  QField Cloud Management",
    "section": "4.2 Projektmitglieder hinzufügen",
    "text": "4.2 Projektmitglieder hinzufügen\nUm gemeinsam an einem QField Projekt zu arbeiten, müssen die Projektmitglieder (sogenannte Collaborators) dem Projekt hinzugefügt werden. Um die Berechtigung der einzelnen Mitglieder zu steuern gibt es verschiedene Rollen. Diese sind in Tabelle 4.1 zusammengefasst. Mehr Infos dazu sind hier zu finden.\n\n\n\nTabelle 4.1: Unterschiedliche Rollen (roles) und ihre Berechtigungen (privileges) auf einem QField Cloud Projekt\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n🠃 Privileges \\ Role →\nReader\nReporter\nEditor\nManager\nAdmin\nOwner\n\n\n\n\nRead data\n✅\n✅\n✅\n✅\n✅\n✅\n\n\nInsert data 1\n\n✅\n✅\n✅\n✅\n✅\n\n\nEdit data 2\n\n\n✅\n✅\n✅\n✅\n\n\nAdd / remove collaborators\n\n\n\n✅\n✅\n✅\n\n\nRename / delete project\n\n\n\n\n✅\n✅\n\n\nTransfer ownership\n\n\n\n\n\n✅",
    "crumbs": [
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>QField Cloud Management</span>"
    ]
  },
  {
    "objectID": "qfield-cloud-management.html#organization-teams",
    "href": "qfield-cloud-management.html#organization-teams",
    "title": "4  QField Cloud Management",
    "section": "4.3 Organization Teams",
    "text": "4.3 Organization Teams\nTeams ermöglichen es, auf einfache Weise Berechtigungen für mehrere Benutzer gleichzeitig zu vergeben (z.B. eine Forschungsgruppe oder Klasse von Studenten).\nEin Team besteht aus mehreren Nutzer der Organisation. Wenn einem Team eine Rolle in einem Projekt zugewiesen wird, haben alle Teammitglieder automatisch auch diese Rolle (siehe Kapitel 4.2). Ein Nutzer kann an mehreren Teams beteiligt sein.",
    "crumbs": [
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>QField Cloud Management</span>"
    ]
  },
  {
    "objectID": "qfield-cloud-management.html#footnotes",
    "href": "qfield-cloud-management.html#footnotes",
    "title": "4  QField Cloud Management",
    "section": "",
    "text": "Inserting does not include updating and deleting data.↩︎\nEditing includes updating and deleting data.↩︎",
    "crumbs": [
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>QField Cloud Management</span>"
    ]
  },
  {
    "objectID": "anhang.html",
    "href": "anhang.html",
    "title": "5  Anhang",
    "section": "",
    "text": "5.1 Anhang 1",
    "crumbs": [
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>Anhang</span>"
    ]
  },
  {
    "objectID": "anhang.html#anhang-1",
    "href": "anhang.html#anhang-1",
    "title": "5  Anhang",
    "section": "",
    "text": "Tabelle 5.1: Geopackage Data Types. Quelle: geopackage.org\n\n\n\n\n\n\n\n\n\nData Type\nSize and Description\n\n\n\n\nINTEGER 32 bit\n32-bit signed two’s complement integer. Stored as SQLite INTEGER with values in the range [-2147483648, 2147483647].\n\n\nINTEGER 64 bit\n64-bit signed two’s complement integer. Stored as SQLite INTEGER with values in the range [-9223372036854775808, 9223372036854775807].\n\n\nREAL\n64-bit IEEE floating point number. Stored as SQLite REAL.\n\n\nTEXT{(maxchar_count)}\nVariable length string encoded in either UTF-8 or UTF-16. The optional maxchar_count defines the maximum number of characters in the string. If not specified, the length is unbounded. Stored as SQLite TEXT.\n\n\nBLOB{(max_size)}\nVariable length binary data. The optional max_size defines the maximum number of bytes in the blob. If not specified, the length is unbounded.\n\n\nDATE\nISO 8601 date string in the form YYYY-MM-DD encoded in either UTF-8 or UTF-16. Stored as SQLite TEXT (see TEXT above).\n\n\nDATETIME\nISO-8601 date/time string in the form YYYY-MM-DDTHH:MM:SS.SSSZ with T separator character and Z suffix for coordinated universal time (UTC) encoded in either UTF-8 or UTF-16. Stored as SQLite TEXT (see TEXT above).",
    "crumbs": [
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>Anhang</span>"
    ]
  },
  {
    "objectID": "anhang.html#sec-python-sdk",
    "href": "anhang.html#sec-python-sdk",
    "title": "5  Anhang",
    "section": "5.2 Anhang 2",
    "text": "5.2 Anhang 2\nEinzelne Nutzer können können sehr gut via dem Webinterface von QField Cloud hinzugefügt werden. Um mehrere Nutzer zu importieren, können wir die QFieldCloud API verwenden. Diese API kann man auf verschiedene Arten benutzen:\n\nQFieldCloud SDK via Python (Dokumentation)\nQFieldCloud SDK via Kommandozeile (Dokumentation)\n(RestAPI von der Kommandozeile (Dokumentation))\n\nIn den Beispielen verwenden wir die SDK via Python. Installation: pip install qfieldcloud-sdk\n\nEin einzelner Nutzer der Organisation hinzufügen\nimport getpass\nfrom qfieldcloud_sdk import sdk\n\nuser = getpass.getpass(\"Username:\")\npasswd = getpass.getpass(\"Password:\")\n\nclient = sdk.Client(url=\"https://app.qfield.cloud/api/v1/\")\nclient.login(user, passwd)\n\n# Der Nutzer \"BENUTZERNAME\" muss bereits existieren!\n# \"BENUTZERNAME\" darf keine Emailadresse sein :-(\nclient.add_organization_member(\"ZHAW\", \"BENUTZERNAME\", \"member\", False) \n\n\nMehrere Nutzer der Organisation hinzufügen\nUm mehrere Mitglieder unserer Organisation hinzuzufügen, braucht es eine CSV Datei mit folgender Struktur:\nusername,org_role,proj_role\nninja_1,member,reader\nninja_2,member,editor\nninja_3,admin,manager\nninja_4,member,reporter\nHier der Python code für das Importieren via CSV:\nimport requests, csv\nfrom qfieldcloud_sdk import sdk\n\nclient = sdk.Client(\n    url=\"https://app.qfield.cloud/api/v1/\"\n)\nclient.login(username='myuser', password='mypassword')\n\ndef read_csv(csv_path: str, organization: str, project_id: str, is_public: bool):\n    with open(csv_path, mode=\"r\", newline=\"\", encoding=\"utf-8\") as csvfile:\n        reader = csv.DictReader(csvfile)\n        for user in reader:\n            try:\n                client.add_organization_member(\n                    organization, user[\"username\"], user[\"org_role\"], is_public\n                )\n                print(\n                    f\"Added member {user['username']} with role {user['org_role']} in {organization}\"\n                )\n            except requests.exceptions.RequestException:\n                print(\"Oops!\")\n\n\nif __name__ == \"__main__\":\n    organization = \"ZHAW\"\n    is_public = False\n    csv_path = 'path/to/files/surveyors.csv'\n    read_csv(csv_path, organization, project_id, is_public)",
    "crumbs": [
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>Anhang</span>"
    ]
  }
]